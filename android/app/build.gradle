plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    // END: FlutterFire Configuration
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

 def keystoreProperties = new Properties()
   def keystorePropertiesFile = rootProject.file('key.properties')
   if (keystorePropertiesFile.exists()) {
       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
   }

android {
    namespace "com.dgti.selleri"
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.dgti.selleri"
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        ndk {
            debugSymbolLevel 'FULL'
        }
    }

    signingConfigs {
        release {
            if (System.getenv()["CI"]) { // CI=true is exported by Codemagic
                storeFile file(System.getenv()["CM_KEYSTORE_PATH"])
                storePassword System.getenv()["CM_KEYSTORE_PASSWORD"]
                keyAlias System.getenv()["CM_KEY_ALIAS"]
                keyPassword System.getenv()["CM_KEY_PASSWORD"]
            } else {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
                storePassword keystoreProperties['storePassword']
            }
        }
        stage {
            if (System.getenv()["CI"]) { // CI=true is exported by Codemagic
                storeFile file(System.getenv()["CM_KEYSTORE_PATH"])
                storePassword System.getenv()["CM_KEYSTORE_PASSWORD"]
                keyAlias System.getenv()["CM_KEY_ALIAS"]
                keyPassword System.getenv()["CM_KEY_PASSWORD"]
            } else {
                keyAlias keystoreProperties['keyAliasStage']
                keyPassword keystoreProperties['keyPasswordStage']
                storeFile keystoreProperties['storeFileStage'] ? file(keystoreProperties['storeFileStage']) : null
                storePassword keystoreProperties['storePasswordStage']
            }
        }
    }

    flavorDimensions "mode"

    productFlavors {
        dev {
            dimension "mode"
            resValue "string", "app_name", "Selleri Dev"
            applicationIdSuffix ".dev"
            manifestPlaceholders = [
                applicationLabel: "Selleri Dev",
                applicationScheme: "dev-selleri",
                applicationHost: "dev.selleri.co.id"
            ]
        }
        stage {
            dimension "mode"
            resValue "string", "app_name", "Selleri Stage"
            applicationIdSuffix ".stage"
            manifestPlaceholders = [
                applicationLabel: "Selleri Stage",
                applicationScheme: "dev-selleri",
                applicationHost: "dev.selleri.co.id"
            ]
            signingConfig signingConfigs.stage
        }
        prod {
            resValue "string", "app_name", "Selleri"
            manifestPlaceholders = [
                applicationLabel: "Selleri",
                applicationScheme: "selleri",
                applicationHost: "selleri.co.id"
            ]
            applicationIdSuffix ".prod"
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.work:work-runtime-ktx:2.7.0'
}
